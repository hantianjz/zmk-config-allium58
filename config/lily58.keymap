/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

enum layer_number { _QWERTY = 0, _FUNC, _SHFT, _TMUX, _SYSM };

#define AS(keycode) &as LS(keycode) keycode

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
/* QWERTY
 * ,-----------------------------------------.                                  ,-----------------------------------------.
 * | GESC |   1  |   2  |   3  |   4  |   5  |                                  |   6  |   7  |   8  |   9  |   0  | Bksp |
 * |------+------+------+------+------+------|                                  |------+------+------+------+------+------|
 * |  TAB |   Q  |   W  |   E  |   R  |   T  |                                  |   Y  |   U  |   I  |   O  |   P  |  Del |
 * |------+------+------+------+------+------|                                  |------+------+------+------+------+------|
 * |CTL(T)|   A  |   S  |   D  |   F  |   G  |-------.                  ,-------|   H  |   J  |   K  |   L  |   ;  | Enter|
 * |------+------+------+------+------+------|_SYSTM |                  |_SYSTM |------+------+------+------+------+------|
 * |LShift|   Z  |   X  |   C  |   V  |   B  |-------|                  |-------|   N  |   M  |   ,  |   .  |   /  |  '   |
 * `-----------------------------------------/       /                   \      \-----------------------------------------'
 *                   | INS  | LAlt | LGUI | /Space  /                     \Space \  |RShift| LT/DN | RT/UP|
 *                   `----------------------------'                         '----------------------------'
 */
            bindings = <
&gresc        AS(N1) AS(N2) AS(N3)   AS(N4)   AS(N5)                                     AS(N6)    AS(N7)   AS(N8)    AS(N9)  AS(N0)   &kp BSPC
&kp TAB       &kp Q  &kp W  &kp E    &kp R    &kp T                                      &kp Y     &kp U    &kp I     &kp O   &kp P    &kp DEL
&mt LCTRL TAB &kp A  &kp S  &kp D    &kp F    &kp G                                      &kp H     &kp J    &kp K     &kp L   AS(SEMI) &kp RET
&kp LSHFT     &kp Z  &kp X  &kp C    &kp V    &kp B     &mo _SYSM        &mo _SYSM       &kp N     &kp M    AS(COMMA) AS(DOT) AS(FSLH) AS(SQT)
                            &kp INS  &kp LALT &kp LGUI  &lt _FUNC SPACE  &lt _SHFT SPACE AS(MINUS) &kp BSPC &kp UP
            >;

        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans    &trans    &trans    &trans
&kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                                              &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
            >;
        };
    };
};

